<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>“cpp” on Valencia</title>
    <link>https://astr0mfly.github.io/tags/cpp/</link>
    <description>Recent content in “cpp” on Valencia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 24 Apr 2019 08:14:44 -0700</lastBuildDate>
    
	<atom:link href="https://astr0mfly.github.io/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式</title>
      <link>https://astr0mfly.github.io/blog/2019-04/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 24 Apr 2019 08:14:44 -0700</pubDate>
      
      <guid>https://astr0mfly.github.io/blog/2019-04/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>简介 推荐书籍《设计模式&amp;ndash;可复用面向对象软件的基础》 底层思维：向下，把握机器底层-&amp;gt;语言构造、编译转换、内存模型、运行机制 抽象思维：面向对象、组件封装、设计模式、架构模式 深入理解三大面向对象机制： - 封装，隐藏内部实现 - 继承，复用现有代码 - 多态，改写对象行为 设计模式详解 策略模式 起因 软件构造的过程中，算法和对象容易耦合，那么能不能让算法与对象本身解耦呢？ 要点 Strategy及其字类为组</description>
    </item>
    
  </channel>
</rss>